pipeline {
  agent any

  stages {
    stage('Checkout') {
      steps {
        checkout([$class: 'GitSCM',
                  branches: [[name: '*/main']],
                  userRemoteConfigs: [[url: 'https://github.com/shubhamgpt198/rocket-ml-assignment.git']]])
      }
    }

    stage('Build Docker Image') {
      steps {
        script {
          def app_name = "rocketml-assignment"
          def image_name = "gcr.io/rocketml-385812/${app_name}:latest"

          sh "docker build -t ${image_name} ."
        }
      }
    }

    stage('Push to GCR') {
      steps {
        script {
          def project_name = "rocketml-385812"
          def app_name = "rocketml-assignment"
          def image_name = "gcr.io/rocketml-385812/${app_name}:latest"
          
          withCredentials([file(credentialsId: 'rocketmlgcr', variable: 'GC_KEY')]){
              sh "cat '$GC_KEY' | docker login -u _json_key --password-stdin https://gcr.io"
              sh "gcloud auth activate-service-account --key-file='$GC_KEY'"
              sh "gcloud auth configure-docker"
              GLOUD_AUTH = sh (
                    script: 'gcloud auth print-access-token',
                    returnStdout: true
                ).trim()
              echo "Pushing image To GCR"
              sh "docker push ${image_name}"
          }
        }
      }
    }

    stage('Deploy to GKE') {
      steps {
        script {
          def project_name = "rocketml-385812"
          def app_name = "rocketml-assignment"
          def image_name = "gcr.io/rocketml-385812/${app_name}:latest"
          def deployment_name = "rocketml-assignment"
          def cluster_name = "rocketml-cluster"
          def zone = "us-central1-c"
         
            sh "gcloud container clusters get-credentials ${cluster_name} --region=${zone}"
            sh "kubectl apply -f deployment.yaml"
            sh "kubectl apply -f service.yaml"
        }
      }
    }
  }
}